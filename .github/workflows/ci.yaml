name: "CI"

env:
  FOUNDRY_PROFILE: "ci"

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v4

      - name: "Configure Git"
        run: |
          # Prevent "Author identity unknown" errors when forge installs submodules.
          git config --global user.email "actions@github.com"
          git config --global user.name "github-actions"

      - name: "Install Foundry"
        uses: foundry-rs/foundry-toolchain@v1

      - name: "Install Libraries"
        run: |
          forge install foundry-rs/forge-std
          forge install OpenZeppelin/openzeppelin-contracts
          forge install sablier-labs/sablier

      - name: "Build the contracts and print their size"
        run: forge build --sizes

      - name: "Add build summary"
        run: |
          echo "## Build result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  test:
    needs: ["build"]
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v4

      - name: "Configure Git"
        run: |
          # Same reason, especially if you re-install in the test job
          git config --global user.email "actions@github.com"
          git config --global user.name "github-actions"

      - name: "Install Foundry"
        uses: foundry-rs/foundry-toolchain@v1

      - name: "Install Libraries"
        run: |
          forge install foundry-rs/forge-std
          forge install OpenZeppelin/openzeppelin-contracts
          forge install sablier-labs/sablier

      - name: "Show the Foundry config"
        run: forge config

      - name: "Generate a fuzz seed that changes weekly"
        run: |
          echo "FOUNDRY_FUZZ_SEED=$(( $EPOCHSECONDS - $EPOCHSECONDS % 604800 ))" >> $GITHUB_ENV

      - name: "Run the tests (only test files, skip scripts)"
        run: |
          # --match-path 'test/**/*.sol' ensures we only compile/test what's in `test/` directory.
          forge test --match-path "test/**/*.sol"

      - name: "Add test summary"
        run: |
          echo "## Tests result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY
